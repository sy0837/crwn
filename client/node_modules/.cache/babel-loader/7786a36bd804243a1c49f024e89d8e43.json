{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.util\";\nexport function* signInWithGoogle() {\n  yield console.log('Fired');\n\n  try {\n    const userRef = yield auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n  } catch (erroe) {}\n}\nexport function* onGoogleSignInStart() {\n  yield console.log(\"fired\");\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield 'Lets check';\n  yield all([call(onGoogleSignInStart())]);\n}","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInWithGoogle","console","log","userRef","signInWithPopup","erroe","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,GAA/B,QAA0C,oBAA1C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA+D,8BAA/D;AAGA,OAAO,UAAUC,gBAAV,GAA8B;AACjC,QAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;;AACA,MAAI;AACA,UAAMC,OAAO,GAAE,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACH,GAHD,CAGE,OAAOE,KAAP,EAAc,CAEf;AACJ;AACD,OAAO,UAAUC,mBAAV,GAAiC;AACpC,QAAML,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;AACA,QAAMV,UAAU,CAACI,eAAe,CAACW,oBAAjB,EAAuCP,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUQ,SAAV,GAAqB;AACxB,QAAO,YAAP;AACA,QAAMb,GAAG,CAAC,CAACD,IAAI,CAACY,mBAAmB,EAApB,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest,put, call, all } from \"redux-saga/effects\";\r\nimport UserActionTypes from \"./user.types\";\r\nimport {auth, googleProvider ,createUserProfileDocument } from \"../../firebase/firebase.util\";\r\n\r\n\r\nexport function* signInWithGoogle () {\r\n    yield console.log('Fired');\r\n    try {\r\n        const userRef= yield auth.signInWithPopup(googleProvider)\r\n        console.log(userRef);\r\n    } catch (erroe) {\r\n        \r\n    }\r\n}\r\nexport function* onGoogleSignInStart () {\r\n    yield console.log(\"fired\");\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield ('Lets check')\r\n    yield all([call(onGoogleSignInStart())])\r\n}"]},"metadata":{},"sourceType":"module"}