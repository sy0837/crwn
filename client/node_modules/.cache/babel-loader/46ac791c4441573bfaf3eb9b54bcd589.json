{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_Practice\\\\crwnshop\\\\client\\\\src\\\\components\\\\signin\\\\signin.component.jsx\";\nimport React, { useState } from 'react'; // import './signin.styles.scss'\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../CustomButton/customButton.component';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer, ErrorWarning } from './signin.styles';\nimport { createStructuredSelector } from 'reselect';\nimport { passwordError } from '../../redux/user/user.selector';\n\nconst Signin = ({\n  emailSignInStart,\n  googleSignInStart,\n  error\n}) => {\n  const [userCredentials, setCerdentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCerdentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SignInTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Signin with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    handleChange: handleChange,\n    label: \"Email\" // placeHolder='Email'\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    handleChange: handleChange,\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSigin: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Sigin with Google\")), error ? /*#__PURE__*/React.createElement(ErrorWarning, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }\n  }, \"Password is wrong\") : null));\n};\n\nconst mapStateToProp = createStructuredSelector({\n  error: passwordError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(mapStateToProp, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["D:/react_Practice/crwnshop/client/src/components/signin/signin.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","ErrorWarning","createStructuredSelector","passwordError","Signin","error","userCredentials","setCerdentials","email","password","handleSubmit","event","preventDefault","handleChange","name","value","target","mapStateToProp","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n// import './signin.styles.scss'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../CustomButton/customButton.component'\r\nimport { connect } from 'react-redux'\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action'\r\nimport { SignInContainer, SignInTitle, ButtonsBarContainer, ErrorWarning } from './signin.styles'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { passwordError } from '../../redux/user/user.selector'\r\n\r\nconst Signin = ({ emailSignInStart, googleSignInStart, error }) => {\r\n\r\n    const [userCredentials, setCerdentials] = useState({ email: '', password: '' })\r\n\r\n    const { email, password } = userCredentials\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        emailSignInStart(email, password)\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        setCerdentials({ ...userCredentials, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <SignInContainer>\r\n            <SignInTitle>I already have an account</SignInTitle>\r\n            <span>Signin with your email and password</span>\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    name='email'\r\n                    type='email'\r\n                    value={email}\r\n                    required\r\n                    handleChange={handleChange}\r\n                    label='Email'\r\n                // placeHolder='Email'\r\n                />\r\n                <FormInput\r\n                    name='password'\r\n                    type='password'\r\n                    value={password}\r\n                    required\r\n                    handleChange={handleChange}\r\n                    label='Password'\r\n                />\r\n                <ButtonsBarContainer>\r\n                    <CustomButton type='submit'>Submit</CustomButton>\r\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSigin >Sigin with Google</CustomButton>\r\n                </ButtonsBarContainer>\r\n                {\r\n                    error? <ErrorWarning>Password is wrong</ErrorWarning> : null\r\n                }\r\n            </form>\r\n        </SignInContainer>\r\n    )\r\n\r\n}\r\nconst mapStateToProp= createStructuredSelector({\r\n    error: passwordError\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\nexport default connect(mapStateToProp, mapDispatchToProps)(Signin)"]},"metadata":{},"sourceType":"module"}