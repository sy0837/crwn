{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root.reducer';\nimport { persistStore } from 'redux-persist'; // import thunk from 'redux-thunk'\n\nimport CreateSagaMiddleware from 'redux-saga';\nimport thunk from 'redux-thunk';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nconst sagaMiddleware = CreateSagaMiddleware();\nconst middlewares = [sagaMiddleware, thunk];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store); //to create storage of the data","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","persistStore","CreateSagaMiddleware","thunk","fetchCollectionsStart","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,MAAMC,cAAc,GAAEH,oBAAoB,EAA1C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,EAAgBF,KAAhB,CAApB;;AAEA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA2C;AACvCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBX,MAAjB;AACH;;AAED,OAAO,MAAMY,KAAK,GAAGd,WAAW,CAACG,WAAD,EAAcF,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAzB;AACPD,cAAc,CAACO,GAAf,CAAmBR,qBAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B,C,CAAsC","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport logger from 'redux-logger'\r\nimport rootReducer from './root.reducer'\r\nimport { persistStore } from 'redux-persist'\r\n// import thunk from 'redux-thunk'\r\nimport CreateSagaMiddleware from 'redux-saga'\r\nimport thunk from 'redux-thunk'\r\nimport { fetchCollectionsStart } from './shop/shop.sagas'\r\n\r\nconst sagaMiddleware= CreateSagaMiddleware()\r\n\r\nconst middlewares = [sagaMiddleware,thunk]\r\n\r\nif (process.env.NODE_ENV === 'development'){\r\n    middlewares.push(logger)\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\nsagaMiddleware.run(fetchCollectionsStart)\r\n\r\nexport const persistor = persistStore(store) //to create storage of the data  \r\n"]},"metadata":{},"sourceType":"module"}