{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_Practice\\\\crwnshop\\\\src\\\\pages\\\\shop\\\\shoppage.component.jsx\";\nimport React from \"react\";\nimport CollectionOverview from \"../../components/collectionOverview/collectionOverview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collectionPage.component\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.action\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from \"../../redux/shop/shop.selector\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 72\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 40\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst MapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(MapStateToProps, mapDispatchToProps)(ShopPage); // render() {\n//     const { match, isCollectionFetching, isCollectionsLoaded } = this.props\n//     return (\n//         <div className=\"shop-page\">\n//             <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} />\n//             <Route\n//                 path={`${match.path}/:collectionId`}\n//                 render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />}\n//             />\n//         </div>\n//     )\n// }","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/pages/shop/shoppage.component.jsx"],"names":["React","CollectionOverview","Route","CollectionPage","connect","fetchCollectionsStartAsync","WithSpinner","createStructuredSelector","selectIsCollectionFetching","selectIsCollectionLoaded","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","loading","state","path","MapStateToProps","isCollectionFetching","isCollectionsLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,kEAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,gCAArE;AACA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACL,kBAAD,CAAlD;AACA,MAAMU,yBAAyB,GAAGL,WAAW,CAACH,cAAD,CAA7C;;AAGA,MAAMS,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAET,MAAAA;AAAF,QAAiC,KAAKU,KAA5C;AAEAV,IAAAA,0BAA0B;AAC3B;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGL,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAwDH,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGL,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAmDH,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AASH;;AAnBkC;;AAwBvC,MAAMM,eAAe,GAAGd,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAAGd,0BADsB;AAE7Ce,EAAAA,mBAAmB,EAAEd;AAFwB,CAAD,CAAhD;;AAKA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,0BAA0B,EAAE,MAAKoB,QAAQ,CAACpB,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAGA,eAAeD,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,QAA7C,CAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport CollectionOverview from \"../../components/collectionOverview/collectionOverview.component\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionPage from \"../collection/collectionPage.component\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.action\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from \"../../redux/shop/shop.selector\";\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview)\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n    \r\n        fetchCollectionsStartAsync();\r\n      }\r\n\r\n      render() {\r\n        const { match } = this.props\r\n        const { loading } = this.state\r\n        return (\r\n            <div className=\"shop-page\">\r\n                <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} />} />\r\n                <Route\r\n                    path={`${match.path}/:collectionId`}\r\n                    render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n  \r\n}\r\n\r\n\r\nconst MapStateToProps = createStructuredSelector({\r\n    isCollectionFetching : selectIsCollectionFetching,\r\n    isCollectionsLoaded: selectIsCollectionLoaded\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () =>dispatch(fetchCollectionsStartAsync())\r\n})\r\nexport default connect(MapStateToProps, mapDispatchToProps)(ShopPage);\r\n\r\n\r\n\r\n// render() {\r\n//     const { match, isCollectionFetching, isCollectionsLoaded } = this.props\r\n//     return (\r\n//         <div className=\"shop-page\">\r\n//             <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} />\r\n//             <Route\r\n//                 path={`${match.path}/:collectionId`}\r\n//                 render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />}\r\n//             />\r\n//         </div>\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}