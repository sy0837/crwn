{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_Practice\\\\crwnshop\\\\src\\\\pages\\\\shop\\\\shoppage.component.jsx\";\nimport React from \"react\";\nimport CollectionOverviewContainer from '../../components/collectionOverview/collectionOverview.container';\nimport { Route } from \"react-router-dom\";\nimport CollectionPageContainer from \"../collection/collectionPage.container\"; // import { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.util\";\n\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.action\"; // import WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n// import { createStructuredSelector } from \"reselect\";\n// import {  selectIsCollectionsLoaded } from \"../../redux/shop/shop.selector\";\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview)\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }));\n  }\n\n} // const mapStateToProps = createStructuredSelector({\n//     isCollectionsLoaded: selectIsCollectionsLoaded\n// })\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/pages/shop/shoppage.component.jsx"],"names":["React","CollectionOverviewContainer","Route","CollectionPageContainer","connect","fetchCollectionsStart","ShopPage","Component","componentDidMount","fetchCollectionsStartAsync","props","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,2BAAP,MAAwC,kEAAxC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,uBAAP,MAAoC,wCAApC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,8BAAtC,C,CACA;AACA;AACA;AAGA;AACA;;AAGA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAG;AAEhB,UAAM;AAACC,MAAAA;AAAD,QAA6B,KAAKC,KAAxC;AACAD,IAAAA,0BAA0B;AAC7B;;AACDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKF,KAAtB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEZ,2BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBADxB;AAEI,MAAA,SAAS,EAAEV,uBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AASH;;AAlBkC,C,CAqBvC;AACA;AACA;;;AACA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCV,EAAAA,qBAAqB,EAAE,MAAMU,QAAQ,CAACN,0BAA0B,EAA3B;AADD,CAAL,CAAnC;;AAGA,eAAeL,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCR,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport CollectionOverviewContainer from '../../components/collectionOverview/collectionOverview.container'\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionPageContainer from \"../collection/collectionPage.container\";\r\n// import { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.util\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.action\";\r\n// import WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n// import { createStructuredSelector } from \"reselect\";\r\n// import {  selectIsCollectionsLoaded } from \"../../redux/shop/shop.selector\";\r\n\r\n\r\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview)\r\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        const {fetchCollectionsStartAsync}=this.props\r\n        fetchCollectionsStartAsync()\r\n    }\r\n    render() {\r\n        const { match} = this.props\r\n        return (\r\n            <div className=\"shop-page\">\r\n                <Route exact path={`${match.path}`} component={CollectionOverviewContainer} />\r\n                <Route\r\n                    path={`${match.path}/:collectionId`}\r\n                    component={CollectionPageContainer}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = createStructuredSelector({\r\n//     isCollectionsLoaded: selectIsCollectionsLoaded\r\n// })\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStartAsync())\r\n})\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}