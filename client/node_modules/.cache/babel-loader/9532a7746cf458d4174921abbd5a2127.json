{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_Practice\\\\crwnshop\\\\src\\\\components\\\\signin\\\\signin.component.jsx\";\nimport React from 'react';\nimport './signin.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../CustomButton/customButton.component';\nimport { auth } from '../../firebase/firebase.util';\nimport { connect } from 'react-redux';\nimport { googleSignInStart } from '../../redux/user/user.action';\n\nclass Signin extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Signin with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"Email\" // placeHolder='Email'\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSigin: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Sigin with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/components/signin/signin.component.jsx"],"names":["React","FormInput","CustomButton","auth","connect","googleSignInStart","Signin","Component","constructor","handleSubmit","event","preventDefault","email","password","state","handleChange","name","value","target","setState","render","props","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAAUC,IAAV,QAAsB,8BAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,GAAG;AACV;;AADU,SAQdC,YARc,GAQCC,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;AAIH,KAda;;AAAA,SAgBdC,YAhBc,GAgBCL,KAAK,IAAI;AACpB,YAAM;AAAEM,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBP,KAAK,CAACQ,MAA9B;AAEA,WAAKC,QAAL,CAAc;AAAE,SAACH,IAAD,GAAQC;AAAV,OAAd;AACH,KApBa;;AAEV,SAAKH,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAiBDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACf,MAAAA;AAAD,QAAqB,KAAKgB,KAAhC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFJ,eAGI;AAAM,MAAA,QAAQ,EAAE,KAAKZ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,KAHtB;AAII,MAAA,QAAQ,MAJZ;AAKI,MAAA,YAAY,EAAE,KAAKG,YALvB;AAMI,MAAA,KAAK,EAAC,OANV,CAOA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAUI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,QAHtB;AAII,MAAA,QAAQ,MAJZ;AAKI,MAAA,YAAY,EAAE,KAAKE,YALvB;AAMI,MAAA,KAAK,EAAC,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAkBI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAEV,iBAArC;AAAwD,MAAA,aAAa,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CAlBJ,CAHJ,CADJ;AA6BH;;AAvDgC;;AAyDrC,MAAMiB,kBAAkB,GAAEC,QAAQ,KAAI;AAClClB,EAAAA,iBAAiB,EAAE,MAAMkB,QAAQ,CAAClB,iBAAiB,EAAlB;AADC,CAAJ,CAAlC;;AAGA,eAAeD,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkChB,MAAlC,CAAf","sourcesContent":["import React from 'react'\r\nimport './signin.styles.scss'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../CustomButton/customButton.component'\r\nimport {  auth } from '../../firebase/firebase.util'\r\nimport { connect } from 'react-redux'\r\nimport { googleSignInStart } from '../../redux/user/user.action'\r\n\r\nclass Signin extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            email: \"\",\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        const { email, password } = this.state\r\n\r\n      \r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {googleSignInStart}= this.props\r\n        return (\r\n            <div className='signin'>\r\n                <h2 className='title'>I already have an account</h2>\r\n                <span>Signin with your email and password</span>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                        name='email'\r\n                        type='email'\r\n                        value={this.state.email}\r\n                        required\r\n                        handleChange={this.handleChange}\r\n                        label='Email'\r\n                    // placeHolder='Email'\r\n                    />\r\n                    <FormInput\r\n                        name='password'\r\n                        type='password'\r\n                        value={this.state.password}\r\n                        required\r\n                        handleChange={this.handleChange}\r\n                        label='Password'\r\n                    />\r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'>Submit</CustomButton>\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSigin >Sigin with Google</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps= dispatch =>({\r\n    googleSignInStart: () => dispatch(googleSignInStart())\r\n})\r\nexport default connect(null, mapDispatchToProps)(Signin)"]},"metadata":{},"sourceType":"module"}