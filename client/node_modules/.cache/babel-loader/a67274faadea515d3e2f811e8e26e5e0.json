{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n  const collectionRef = firestore.collection('collection');\n  const snapshot = yield collectionRef.get();\n  collectionMap = yield call(conver); // collectionRef.get().then(snapshot => {\n  //     const collectionMap = convertCollectionsSnapshotToMap(snapshot)\n  //     dispatch(fetchCollectionsSuccess(collectionMap))\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionMap","conver","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,QAA8B,oBAA9B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,8BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,eAAjE;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,YAArB,CAAtB;AACA,QAAMC,QAAQ,GAAE,MAAMF,aAAa,CAACG,GAAd,EAAtB;AACAC,EAAAA,aAAa,GAAG,MAAMb,IAAI,CAACc,MAAD,CAA1B,CALoC,CAMpC;AACA;AACA;AACA;AACH;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMhB,SAAS,CACXE,eAAe,CAACe,uBADL,EAEXV,qBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery, call} from 'redux-saga/effects'\r\nimport ShopActionTypes from './shop.types'\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\r\n\r\nexport function* fetchCollectionsAsync(){\r\n    yield console.log(\"I am fired\");\r\n\r\n    const collectionRef = firestore.collection('collection')\r\n    const snapshot= yield collectionRef.get()\r\n    collectionMap = yield call(conver)\r\n    // collectionRef.get().then(snapshot => {\r\n    //     const collectionMap = convertCollectionsSnapshotToMap(snapshot)\r\n    //     dispatch(fetchCollectionsSuccess(collectionMap))\r\n    // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}