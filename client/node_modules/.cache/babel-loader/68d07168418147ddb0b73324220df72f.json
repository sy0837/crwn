{"ast":null,"code":"//Checking for the required action,if action matches then the require state is being changed if needed\nimport { UserActionTypes } from \"./user.types\";\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.GOOGLE_SIGN_IN_SUCCESS: // current user action is found \n\n    case UserActionTypes.EMAIL_SIGN_IN_SUCCESS:\n      return { ...state,\n        currentUser: action.payload,\n        // currentUser data is being changed by the Payload passed from action and set \n        error: null\n      };\n\n    case UserActionTypes.GOOGLE_SIGN_IN_FAILURE: // current user action is found \n\n    case UserActionTypes.EMAIL_SIGN_IN_FAILURE:\n      return { ...state,\n        currentUser: action.payload // currentUser data is being changed by the Payload passed from action and set \n\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","error","userReducer","state","action","type","GOOGLE_SIGN_IN_SUCCESS","EMAIL_SIGN_IN_SUCCESS","payload","GOOGLE_SIGN_IN_FAILURE","EMAIL_SIGN_IN_FAILURE"],"mappings":"AAAA;AAEA,SAASA,eAAT,QAAgC,cAAhC;AAEA,MAAMC,aAAa,GAAC;AAChBC,EAAAA,WAAW,EAAE,IADG;AAEhBC,EAAAA,KAAK,EAAE;AAFS,CAApB;;AAKA,MAAMC,WAAW,GAAE,CAACC,KAAK,GAACJ,aAAP,EAAsBK,MAAtB,KAAgC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,eAAe,CAACQ,sBAArB,CADJ,CACiD;;AAC7C,SAAKR,eAAe,CAACS,qBAArB;AACI,aAAM,EACF,GAAGJ,KADD;AAEFH,QAAAA,WAAW,EAAEI,MAAM,CAACI,OAFlB;AAE2B;AAC7BP,QAAAA,KAAK,EAAE;AAHL,OAAN;;AAKA,SAAKH,eAAe,CAACW,sBAArB,CARR,CAQqD;;AAC7C,SAAKX,eAAe,CAACY,qBAArB;AACI,aAAM,EACF,GAAGP,KADD;AAEFH,QAAAA,WAAW,EAAEI,MAAM,CAACI,OAFlB,CAE2B;;AAF3B,OAAN;;AAIJ;AACI,aAAOL,KAAP;AAfZ;AAiBC,CAlBD;;AAoBA,eAAeD,WAAf","sourcesContent":["//Checking for the required action,if action matches then the require state is being changed if needed\r\n\r\nimport { UserActionTypes } from \"./user.types\"\r\n\r\nconst INITIAL_STATE={\r\n    currentUser: null,\r\n    error: null\r\n}\r\n\r\nconst userReducer =(state=INITIAL_STATE, action) =>{\r\nswitch(action.type){\r\n    case UserActionTypes.GOOGLE_SIGN_IN_SUCCESS: // current user action is found \r\n    case UserActionTypes.EMAIL_SIGN_IN_SUCCESS: \r\n        return{\r\n            ...state,\r\n            currentUser: action.payload, // currentUser data is being changed by the Payload passed from action and set \r\n            error: null\r\n        }\r\n        case UserActionTypes.GOOGLE_SIGN_IN_FAILURE: // current user action is found \r\n        case UserActionTypes.EMAIL_SIGN_IN_FAILURE: \r\n            return{\r\n                ...state,\r\n                currentUser: action.payload, // currentUser data is being changed by the Payload passed from action and set \r\n            }\r\n        default:\r\n            return state\r\n}\r\n}\r\n\r\nexport default userReducer"]},"metadata":{},"sourceType":"module"}