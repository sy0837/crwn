{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_Practice\\\\crwnshop\\\\src\\\\components\\\\signin\\\\signin.component.jsx\";\nimport React from 'react';\nimport './signin.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../CustomButton/customButton.component';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.util';\nimport { connect } from 'react-redux';\n\nclass Signin extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error.message());\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Signin with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"Email\" // placeHolder='Email'\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: signInWithGoogle,\n      isGoogleSigin: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, \"Sigin with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect()(Signin);","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/components/signin/signin.component.jsx"],"names":["React","FormInput","CustomButton","signInWithGoogle","auth","connect","Signin","Component","constructor","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","message","handleChange","name","value","target","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAASC,gBAAT,EAA2BC,IAA3B,QAAuC,8BAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,GAAG;AACV;;AADU,SAQdC,YARc,GAQCC,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;;AAEA,UAAI;AACAV,QAAAA,IAAI,CAACW,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC;AACA,aAAKG,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAAd;AACH,OAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAN,EAAZ;AAEH;AAEJ,KApBa;;AAAA,SAsBdC,YAtBc,GAsBCX,KAAK,IAAI;AACpB,YAAM;AAAEY,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBb,KAAK,CAACc,MAA9B;AAEA,WAAKR,QAAL,CAAc;AAAE,SAACM,IAAD,GAAQC;AAAV,OAAd;AACH,KA1Ba;;AAEV,SAAKT,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAuBDY,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFJ,eAGI;AAAM,MAAA,QAAQ,EAAE,KAAKhB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,KAHtB;AAII,MAAA,QAAQ,MAJZ;AAKI,MAAA,YAAY,EAAE,KAAKS,YALvB;AAMI,MAAA,KAAK,EAAC,OANV,CAOA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAUI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWD,QAHtB;AAII,MAAA,QAAQ,MAJZ;AAKI,MAAA,YAAY,EAAE,KAAKQ,YALvB;AAMI,MAAA,KAAK,EAAC,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAkBI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAElB,gBAAvB;AAAyC,MAAA,aAAa,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CAlBJ,CAHJ,CADJ;AA6BH;;AA5DgC;;AA8DrC,MAAMuB,kBAAkB,GAAEC,QAAQ,KAAI,EAAJ,CAAlC;;AAGA,eAAetB,OAAO,GAAGC,MAAH,CAAtB","sourcesContent":["import React from 'react'\r\nimport './signin.styles.scss'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../CustomButton/customButton.component'\r\nimport { signInWithGoogle, auth } from '../../firebase/firebase.util'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Signin extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            email: \"\",\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        const { email, password } = this.state\r\n\r\n        try {\r\n            auth.signInWithEmailAndPassword(email, password)\r\n            this.setState({ email: '', password: '' })\r\n        } catch (error) {\r\n            console.log(error.message());\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='signin'>\r\n                <h2 className='title'>I already have an account</h2>\r\n                <span>Signin with your email and password</span>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                        name='email'\r\n                        type='email'\r\n                        value={this.state.email}\r\n                        required\r\n                        handleChange={this.handleChange}\r\n                        label='Email'\r\n                    // placeHolder='Email'\r\n                    />\r\n                    <FormInput\r\n                        name='password'\r\n                        type='password'\r\n                        value={this.state.password}\r\n                        required\r\n                        handleChange={this.handleChange}\r\n                        label='Password'\r\n                    />\r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'>Submit</CustomButton>\r\n                        <CustomButton onClick={signInWithGoogle} isGoogleSigin >Sigin with Google</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps= dispatch =>({\r\n    \r\n})\r\nexport default connect()(Signin)"]},"metadata":{},"sourceType":"module"}