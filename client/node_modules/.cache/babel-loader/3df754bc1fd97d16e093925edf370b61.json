{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantitiy, cartItem) => accumulatedQuantitiy + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantitiy, cartItem) => accumulatedQuantitiy + cartItem.quantity * cartItems.price, 1));","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/redux/cart/cart.selector.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantitiy","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAEzCE,IAAI,IAAIA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAIP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IACLA,SAAS,CAACI,MAAV,CACI,CAACC,oBAAD,EAAuBC,QAAvB,KACID,oBAAoB,GAAGC,QAAQ,CAACC,QAFxC,EAEkD,CAFlD,CAH0C,CAA3C;AAQP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IACTA,SAAS,CAACI,MAAV,CACI,CAACC,oBAAD,EAAuBC,QAAvB,KACID,oBAAoB,GAAGC,QAAQ,CAACC,QAAT,GAAkBP,SAAS,CAACS,KAF3D,EAEkE,CAFlE,CAHyC,CAAtC","sourcesContent":["import { createSelector } from 'reselect'\r\n\r\nconst selectCart = state => state.cart\r\n\r\nexport const selectCartItems = createSelector(\r\n    [selectCart],\r\n    cart => cart.cartItems\r\n)\r\n\r\nexport const selectCartHidden = createSelector(\r\n    [selectCart],\r\n    cart => cart.hidden\r\n)\r\nexport const selectCartItemsCount = createSelector(\r\n    [selectCartItems],\r\n    cartItems =>\r\n        cartItems.reduce(\r\n            (accumulatedQuantitiy, cartItem) =>\r\n                accumulatedQuantitiy + cartItem.quantity, 0)\r\n)\r\n\r\nexport const selectCartTotal = createSelector(\r\n    [selectCartItems],\r\n    cartItems =>\r\n    cartItems.reduce(\r\n        (accumulatedQuantitiy, cartItem) =>\r\n            accumulatedQuantitiy + cartItem.quantity*cartItems.price, 1)\r\n)"]},"metadata":{},"sourceType":"module"}