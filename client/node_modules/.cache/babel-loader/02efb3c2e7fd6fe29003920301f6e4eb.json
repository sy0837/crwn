{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyC4Lmo8FJsgQXmH9OJ30-mtzWgig-V8MY8\",\n  authDomain: \"crwn-db-f1161.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-f1161.firebaseio.com\",\n  projectId: \"crwn-db-f1161\",\n  storageBucket: \"crwn-db-f1161.appspot.com\",\n  messagingSenderId: \"152236205191\",\n  appId: \"1:152236205191:web:980db1d32d718c16134422\",\n  measurementId: \"G-G2J8KDLQJD\"\n}; // const config={\n//     apiKey: \"AIzaSyAFoBUci7LDoRCwhUDAdDKTP8v0aVwT8g4\",\n//     authDomain: \"crwn-db-e0589.firebaseapp.com\",\n//     databaseURL: \"https://crwn-db-e0589.firebaseio.com\",\n//     projectId: \"crwn-db-e0589\",\n//     storageBucket: \"crwn-db-e0589.appspot.com\",\n//     messagingSenderId: \"777439775226\",\n//     appId: \"1:777439775226:web:f0128bf8c0c0e0ef12fc43\",\n//     measurementId: \"G-EYNQSHPEJD\"\n//   };\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\n  const snapShot = await userRef.get(); //   console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        email,\n        displayName,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //To store data to firebase\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(element => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, element);\n  });\n  return await batch.commit();\n};\n\nconst convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.doc.map(doc => {\n    const {\n      title,\n      items\n    } = doc;\n  });\n};\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); //   const provider= new firebase.auth.GoogleAuthProvider();\n//   provider.setCustomParameters({prompt : 'select_account'})\n//   export const SiginWithGoogle= () => auth.signInWithPopup(provider)\n\nexport default firebase;","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/firebase/firebase.util.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","element","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","map","title","items","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAGA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,QAAOJ,QAAQ,CAACK,GAAI,EAAnC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CAJ2E,CAM3E;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAGA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBH,QAAAA,KADgB;AAEhBD,QAAAA,WAFgB;AAGhBE,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAQA,OAAOa,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AAED;AACF;;AAED,SAAOf,OAAP;AAED,CA5BM;AA8BPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CAEP;;AACA,OAAO,MAAMiB,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,YAAtB,KAAuC;AAC9E,QAAMC,aAAa,GAAGpB,SAAS,CAACqB,UAAV,CAAqBH,aAArB,CAAtB;AAEA,QAAMI,KAAK,GAAGtB,SAAS,CAACsB,KAAV,EAAd;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,OAAO,IAAI;AAC9B,UAAMC,SAAS,GAAGL,aAAa,CAACnB,GAAd,EAAlB;AACAqB,IAAAA,KAAK,CAACZ,GAAN,CAAUe,SAAV,EAAqBD,OAArB;AAED,GAJD;AAKA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AAED,CAXM;;AAaP,MAAMC,+BAA+B,GAAGC,WAAD,IAAgB;AACrD,QAAMC,qBAAqB,GAAED,WAAW,CAAC3B,GAAZ,CAAgB6B,GAAhB,CAAoB7B,GAAG,IAAG;AACrD,UAAM;AAAC8B,MAAAA,KAAD;AAASC,MAAAA;AAAT,QAAiB/B,GAAvB;AACD,GAF4B,CAA7B;AAGD,CAJD;;AAMA,MAAMgC,QAAQ,GAAG,IAAI/C,QAAQ,CAAC8B,IAAT,CAAckB,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMrB,IAAI,CAACsB,eAAL,CAAqBL,QAArB,CAA/B,C,CAEP;AACA;AACA;;AAEA,eAAe/C,QAAf","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyC4Lmo8FJsgQXmH9OJ30-mtzWgig-V8MY8\",\r\n  authDomain: \"crwn-db-f1161.firebaseapp.com\",\r\n  databaseURL: \"https://crwn-db-f1161.firebaseio.com\",\r\n  projectId: \"crwn-db-f1161\",\r\n  storageBucket: \"crwn-db-f1161.appspot.com\",\r\n  messagingSenderId: \"152236205191\",\r\n  appId: \"1:152236205191:web:980db1d32d718c16134422\",\r\n  measurementId: \"G-G2J8KDLQJD\"\r\n};\r\n// const config={\r\n//     apiKey: \"AIzaSyAFoBUci7LDoRCwhUDAdDKTP8v0aVwT8g4\",\r\n//     authDomain: \"crwn-db-e0589.firebaseapp.com\",\r\n//     databaseURL: \"https://crwn-db-e0589.firebaseio.com\",\r\n//     projectId: \"crwn-db-e0589\",\r\n//     storageBucket: \"crwn-db-e0589.appspot.com\",\r\n//     messagingSenderId: \"777439775226\",\r\n//     appId: \"1:777439775226:web:f0128bf8c0c0e0ef12fc43\",\r\n//     measurementId: \"G-EYNQSHPEJD\"\r\n//   };\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`user/${userAuth.uid}`)\r\n  const snapShot = await userRef.get()\r\n\r\n  //   console.log(snapShot);\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth\r\n    const createdAt = new Date()\r\n\r\n\r\n    try {\r\n      await userRef.set({\r\n        email,\r\n        displayName,\r\n        createdAt,\r\n        ...additionalData\r\n      })\r\n    }\r\n    catch (error) {\r\n      console.log(error.message);\r\n\r\n    }\r\n  }\r\n\r\n  return userRef\r\n\r\n}\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n//To store data to firebase\r\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n  const collectionRef = firestore.collection(collectionKey)\r\n\r\n  const batch = firestore.batch();\r\n  objectsToAdd.forEach(element => {\r\n    const newDocRef = collectionRef.doc();\r\n    batch.set(newDocRef, element)\r\n\r\n  });\r\n  return await batch.commit()\r\n\r\n}\r\n\r\nconst convertCollectionsSnapshotToMap =(collections) =>{\r\n  const transformedCollection =collections.doc.map(doc =>{\r\n    const {title , items} =doc\r\n  })\r\n}\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n//   const provider= new firebase.auth.GoogleAuthProvider();\r\n//   provider.setCustomParameters({prompt : 'select_account'})\r\n//   export const SiginWithGoogle= () => auth.signInWithPopup(provider)\r\n\r\nexport default firebase"]},"metadata":{},"sourceType":"module"}