{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.util\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from \"./user.action\";\nexport function* getSnapshotFromUserAuth(userAuth, additional) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalDAta);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure());\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp() {}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield 'Lets check';\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","additional","userRef","additionalDAta","userSnapShot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","additionalData","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all } from \"redux-saga/effects\";\r\nimport UserActionTypes from \"./user.types\";\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.util\";\r\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from \"./user.action\";\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth,additional) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalDAta)\r\n        const userSnapShot = yield userRef.get()\r\n        yield put(\r\n            signInSuccess({ id: userSnapShot.id, ...userSnapShot.data() })\r\n        )\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider)\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser()\r\n        if (!userAuth) return\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut()\r\n        yield put(signOutSuccess())\r\n    } catch (error) {\r\n        yield put(signOutFailure())\r\n    }\r\n}\r\nexport function* signUp({payload:{email, password,displayName}}){\r\n      try {\r\n            const { user } = yield auth.createUserWithEmailAndPassword(email, password)\r\n            yield put(signUpSuccess({user, additionalData: {displayName}}))\r\n        } catch (error) {\r\n            yield put(signUpFailure(error))\r\n\r\n\r\n        }\r\n\r\n}\r\nexport function* signInAfterSignUp(){\r\n\r\n}\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n}\r\nexport function* onSignUpStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n}\r\nexport function* onSignUpSuccess(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS,signInAfterSignUp)\r\n}\r\nexport function* userSagas() {\r\n    yield ('Lets check')\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}