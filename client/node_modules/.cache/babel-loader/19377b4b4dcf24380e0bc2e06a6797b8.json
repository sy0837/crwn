{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.util\";\nimport { signInSuccess, signInFailure } from \"./user.action\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield 'Lets check';\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,GAA/B,QAA0C,oBAA1C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA+D,8BAA/D;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA4C,eAA5C;AAGA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AAC9C,MAAG;AACH,UAAMC,OAAO,GAAE,MAAMV,IAAI,CAACK,yBAAD,EAA4BI,QAA5B,CAAzB;AACA,UAAME,YAAY,GAAE,MAAMD,OAAO,CAACE,GAAR,EAA1B;AACA,UAAMb,GAAG,CACLO,aAAa,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADR,CAAT;AAGH,GANG,CAMF,OAAOC,KAAP,EAAc;AACZ,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACH;AACA;AACD,OAAO,UAAUC,gBAAV,GAA8B;AACjC,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAQ,MAAMd,IAAI,CAACe,eAAL,CAAqBd,cAArB,CAApB;AACA,UAAMI,uBAAuB,CAACS,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOF,KAAP,EAAc;AACZ,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACH;AACJ;AACD,OAAO,UAAUI,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAuD;AAC1D,MAAI;AACA,UAAM;AAACL,MAAAA;AAAD,QAAO,MAAMd,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAnB;AACA,UAAMZ,OAAO,GAAE,MAAMV,IAAI,CAACK,yBAAD,EAA4BY,IAA5B,CAAzB;AACA,UAAMN,YAAY,GAAE,MAAMD,OAAO,CAACE,GAAR,EAA1B;AACA,UAAMb,GAAG,CACLO,aAAa,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADR,CAAT;AAGH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUS,mBAAV,GAAiC;AACpC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCT,gBAAvC,CAAhB;AACH;AACD,OAAO,UAAUU,kBAAV,GAA8B;AACjC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAO,YAAP;AACA,QAAM3B,GAAG,CAAC,CAACD,IAAI,CAACwB,mBAAD,CAAL,EAA4BxB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest,put, call, all } from \"redux-saga/effects\";\r\nimport UserActionTypes from \"./user.types\";\r\nimport {auth, googleProvider ,createUserProfileDocument } from \"../../firebase/firebase.util\";\r\nimport { signInSuccess, signInFailure} from \"./user.action\";\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try{\r\n    const userRef= yield call(createUserProfileDocument, userAuth)\r\n    const userSnapShot= yield userRef.get()\r\n    yield put(\r\n        signInSuccess({ id: userSnapShot.id, ...userSnapShot.data()})\r\n    )\r\n} catch (error) {\r\n    yield put(signInFailure(error))\r\n}\r\n}\r\nexport function* signInWithGoogle () {\r\n    try {\r\n        const {user}= yield auth.signInWithPopup(googleProvider)\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* signInWithEmail({payload: {email, password}}){\r\n    try {\r\n        const {user}=yield auth.signInWithEmailAndPassword(email, password)\r\n        const userRef= yield call(createUserProfileDocument, user)\r\n        const userSnapShot= yield userRef.get()\r\n        yield put(\r\n            signInSuccess({ id: userSnapShot.id, ...userSnapShot.data()})\r\n        )\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart () {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield ('Lets check')\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\r\n}"]},"metadata":{},"sourceType":"module"}