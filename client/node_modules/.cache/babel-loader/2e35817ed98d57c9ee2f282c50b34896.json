{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_Practice\\\\crwnshop\\\\src\\\\components\\\\signin\\\\signin.component.jsx\";\nimport React, { useState } from 'react';\nimport './signin.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../CustomButton/customButton.component';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\n\nconst Signin = emailSignInStart => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      emailSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    googleSignInStart\n  } = this.props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Signin with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: this.state.email,\n    required: true,\n    handleChange: handleChange,\n    label: \"Email\" // placeHolder='Email'\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: this.state.password,\n    required: true,\n    handleChange: handleChange,\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSigin: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Sigin with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/components/signin/signin.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","Signin","handleSubmit","event","preventDefault","props","email","password","state","handleChange","name","value","target","setState","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,8BAApD;;AAEA,MAAMC,MAAM,GAAID,gBAAD,IAAqB;AAGhC,QAAME,YAAY,GAAGC,KAAK,IAAI;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAACJ,MAAAA;AAAD,QAAoB,KAAKK,KAA/B;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKC,KAAjC;AACAR,IAAAA,gBAAgB,CAACM,KAAD,EAAOC,QAAP,CAAhB;AAGH,GAPD;;AASD,QAAME,YAAY,GAAGN,KAAK,IAAI;AACzB,UAAM;AAAEO,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBR,KAAK,CAACS,MAA9B;AAEA,SAAKC,QAAL,CAAc;AAAE,OAACH,IAAD,GAAQC;AAAV,KAAd;AACH,GAJF;;AAOK,QAAM;AAACZ,IAAAA;AAAD,MAAqB,KAAKM,KAAhC;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFJ,eAGI;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAE,KAAKM,KAAL,CAAWF,KAHtB;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,YAAY,EAAEG,YALlB;AAMI,IAAA,KAAK,EAAC,OANV,CAOA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAUI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,QAHtB;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,YAAY,EAAEE,YALlB;AAMI,IAAA,KAAK,EAAC,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAkBI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAEV,iBAArC;AAAwD,IAAA,aAAa,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,CAlBJ,CAHJ,CADJ;AA8BP,CAlDD;;AAmDA,MAAMe,kBAAkB,GAAEC,QAAQ,KAAI;AAClChB,EAAAA,iBAAiB,EAAE,MAAMgB,QAAQ,CAAChB,iBAAiB,EAAlB,CADC;AAElCC,EAAAA,gBAAgB,EAAE,CAACM,KAAD,EAAOC,QAAP,KAAoBQ,QAAQ,CAACf,gBAAgB,CAAC;AAACM,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAD,CAAjB;AAFZ,CAAJ,CAAlC;;AAIA,eAAeT,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCb,MAAlC,CAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport './signin.styles.scss'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../CustomButton/customButton.component'\r\nimport { connect } from 'react-redux'\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action'\r\n\r\nconst Signin = (emailSignInStart)=> {\r\n\r\n    \r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        const {emailSignInStart}= this.props\r\n        const { email, password } = this.state\r\n        emailSignInStart(email,password)\r\n\r\n\r\n    }\r\n\r\n   const handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n\r\n        const {googleSignInStart}= this.props\r\n        return (\r\n            <div className='signin'>\r\n                <h2 className='title'>I already have an account</h2>\r\n                <span>Signin with your email and password</span>\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormInput\r\n                        name='email'\r\n                        type='email'\r\n                        value={this.state.email}\r\n                        required\r\n                        handleChange={handleChange}\r\n                        label='Email'\r\n                    // placeHolder='Email'\r\n                    />\r\n                    <FormInput\r\n                        name='password'\r\n                        type='password'\r\n                        value={this.state.password}\r\n                        required\r\n                        handleChange={handleChange}\r\n                        label='Password'\r\n                    />\r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'>Submit</CustomButton>\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSigin >Sigin with Google</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    \r\n}\r\nconst mapDispatchToProps= dispatch =>({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email,password) => dispatch(emailSignInStart({email,password}))\r\n})\r\nexport default connect(null, mapDispatchToProps)(Signin)"]},"metadata":{},"sourceType":"module"}