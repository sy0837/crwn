{"ast":null,"code":"//Checking for the required action,if action matches then the require state is being changed if needed\nimport { UserActionTypes } from \"./user.types\";\nconst INITIAL_STATE = {\n  currentUser: null\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.GOOGLE_SIGN_IN_SUCCESS: // current user action is found \n\n    case UserActionTypes.EMAIL_SIGN_IN_SUCCESS:\n      return { ...state,\n        currentUser: action.payload // currentUser data is being changed by the Payload passed from action and set \n\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","userReducer","state","action","type","GOOGLE_SIGN_IN_SUCCESS","EMAIL_SIGN_IN_SUCCESS","payload"],"mappings":"AAAA;AAEA,SAASA,eAAT,QAAgC,cAAhC;AAEA,MAAMC,aAAa,GAAC;AAChBC,EAAAA,WAAW,EAAE;AADG,CAApB;;AAIA,MAAMC,WAAW,GAAE,CAACC,KAAK,GAACH,aAAP,EAAsBI,MAAtB,KAAgC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,eAAe,CAACO,sBAArB,CADJ,CACiD;;AAC7C,SAAKP,eAAe,CAACQ,qBAArB;AACI,aAAM,EACF,GAAGJ,KADD;AAEFF,QAAAA,WAAW,EAAEG,MAAM,CAACI,OAFlB,CAE0B;;AAF1B,OAAN;;AAIA;AACI,aAAOL,KAAP;AARZ;AAUC,CAXD;;AAaA,eAAeD,WAAf","sourcesContent":["//Checking for the required action,if action matches then the require state is being changed if needed\r\n\r\nimport { UserActionTypes } from \"./user.types\"\r\n\r\nconst INITIAL_STATE={\r\n    currentUser: null\r\n}\r\n\r\nconst userReducer =(state=INITIAL_STATE, action) =>{\r\nswitch(action.type){\r\n    case UserActionTypes.GOOGLE_SIGN_IN_SUCCESS: // current user action is found \r\n    case UserActionTypes.EMAIL_SIGN_IN_SUCCESS: \r\n        return{\r\n            ...state,\r\n            currentUser: action.payload // currentUser data is being changed by the Payload passed from action and set \r\n        }\r\n        default:\r\n            return state\r\n}\r\n}\r\n\r\nexport default userReducer"]},"metadata":{},"sourceType":"module"}