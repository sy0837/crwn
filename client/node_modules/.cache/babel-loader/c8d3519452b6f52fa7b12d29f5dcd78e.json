{"ast":null,"code":"import ShopActionTypes from \"./shop.types\"; // import { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.util\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n}); // export const fetchCollectionsStartAsync =() =>{\n//     return dispatch =>{\n//         const collectionRef = firestore.collection('collection')\n//         dispatch(fetchCollectionsStart())\n//         collectionRef.get().then(snapshot => {\n//             const collectionMap = convertCollectionsSnapshotToMap(snapshot)\n//             dispatch(fetchCollectionsSuccess(collectionMap))\n//         }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n//     }\n// }","map":{"version":3,"sources":["D:/react_Practice/crwnshop/client/src/redux/shop/shop.action.js"],"names":["ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAM;AACvCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADiB,CAAN,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,aAAa,KAAI;AACpDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBAD8B;AAEpDC,EAAAA,OAAO,EAAEF;AAF2C,CAAJ,CAA7C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAI;AACnDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBAD6B;AAEnDH,EAAAA,OAAO,EAAEE;AAF0C,CAAJ,CAA5C,C,CAKP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ShopActionTypes from \"./shop.types\";\r\n// import { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.util\";\r\n\r\nexport const fetchCollectionsStart = () =>({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n})\r\n\r\nexport const fetchCollectionsSuccess = collectionMap =>({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionMap\r\n})\r\n\r\nexport const fetchCollectionsFailure = errorMessage =>({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\n// export const fetchCollectionsStartAsync =() =>{\r\n//     return dispatch =>{\r\n//         const collectionRef = firestore.collection('collection')\r\n//         dispatch(fetchCollectionsStart())\r\n\r\n//         collectionRef.get().then(snapshot => {\r\n//             const collectionMap = convertCollectionsSnapshotToMap(snapshot)\r\n//             dispatch(fetchCollectionsSuccess(collectionMap))\r\n//         }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}