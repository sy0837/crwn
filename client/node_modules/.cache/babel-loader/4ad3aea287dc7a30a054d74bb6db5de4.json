{"ast":null,"code":"import CartActionTypes from './cart.types';\nimport { addItemToCart, removeItem } from './carts.util';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItem(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_CART_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    case CartActionTypes.CLEAR_CART:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItem","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_CART_ITEM","filter","cartItem","id","CLEAR_CART"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,cAA1C;AAIA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,kBAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFV,OAAP;;AAIA,SAAKJ,eAAe,CAACW,QAArB;AACE,aAAM,EACJ,GAAGJ,KADC;AAEJF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAiBG,MAAM,CAACI,OAAxB;AAFpB,OAAN;;AAIA,SAAKZ,eAAe,CAACa,WAArB;AACE,aAAM,EACJ,GAAGN,KADC;AAEJF,QAAAA,SAAS,EAACH,UAAU,CAACK,KAAK,CAACF,SAAP,EAAiBG,MAAM,CAACI,OAAxB;AAFhB,OAAN;;AAIF,SAAKZ,eAAe,CAACc,eAArB;AACE,aAAM,EACJ,GAAGP,KADC;AAEJF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CACTC,QAAQ,IAAGA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EADjC;AAFP,OAAN;;AAMA,SAAKjB,eAAe,CAACkB,UAArB;AACE,aAAM,EAAN;;AAGR;AACE,aAAOX,KAAP;AA5BJ;AA8BD,CA/BD;;AAiCA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\r\nimport { addItemToCart, removeItem } from './carts.util';\r\n\r\n\r\n\r\nconst INITIAL_STATE = {\r\n  hidden: true,\r\n  cartItems: []\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\r\n      return {\r\n        ...state,\r\n        hidden: !state.hidden\r\n      };\r\n      case CartActionTypes.ADD_ITEM:\r\n        return{\r\n          ...state,\r\n          cartItems: addItemToCart(state.cartItems,action.payload)\r\n        }\r\n        case CartActionTypes.REMOVE_ITEM:\r\n          return{\r\n            ...state,\r\n            cartItems:removeItem(state.cartItems,action.payload)\r\n          }\r\n        case CartActionTypes.CLEAR_CART_ITEM:\r\n          return{\r\n            ...state,\r\n            cartItems: state.cartItems.filter(\r\n              cartItem =>cartItem.id !== action.payload.id\r\n            )\r\n          }\r\n          case CartActionTypes.CLEAR_CART:\r\n            return{\r\n              \r\n            }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}