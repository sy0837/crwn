{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_Practice\\\\crwnshop\\\\src\\\\pages\\\\shop\\\\shoppage.component.jsx\";\nimport React from \"react\";\nimport CollectionOverview from \"../../components/collectionOverview/collectionOverview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collectionPage.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.util\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.action\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unSubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collection');\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 72\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 40\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/pages/shop/shoppage.component.jsx"],"names":["React","CollectionOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unSubscribeFromSnapShot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,kEAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,8BAA3D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAGA,MAAMC,8BAA8B,GAAGD,WAAW,CAACP,kBAAD,CAAlD;AACA,MAAMS,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAGA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAInCC,uBAJmC,GAIT,IAJS;AAAA;;AAMnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,aAAa,GAAGlB,+BAA+B,CAACiB,QAAD,CAArD;AACAf,MAAAA,iBAAiB,CAACgB,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEH,KALD;AAMH;;AACDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGV,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGV,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AASH;;AA5BkC;;AA+BvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCtB,EAAAA,iBAAiB,EAAEgB,aAAa,IAAIM,QAAQ,CAACtB,iBAAiB,CAACgB,aAAD,CAAlB;AADR,CAAL,CAAnC;;AAGA,eAAejB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport CollectionOverview from \"../../components/collectionOverview/collectionOverview.component\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionPage from \"../collection/collectionPage.component\";\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.util\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateCollections } from \"../../redux/shop/shop.action\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview)\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n    state = {\r\n        loading: true\r\n    }\r\n    unSubscribeFromSnapShot = null\r\n\r\n    componentDidMount() {\r\n        const { updateCollections } = this.props\r\n        const collectionRef = firestore.collection('collection')\r\n        collectionRef.get().then(snapshot => {\r\n            const collectionMap = convertCollectionsSnapshotToMap(snapshot)\r\n            updateCollections(collectionMap);\r\n            this.setState({ loading: false })\r\n\r\n        })\r\n    }\r\n    render() {\r\n        const { match } = this.props\r\n        const { loading } = this.state\r\n        return (\r\n            <div className=\"shop-page\">\r\n                <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} />} />\r\n                <Route\r\n                    path={`${match.path}/:collectionId`}\r\n                    render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\r\n})\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}