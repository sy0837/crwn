{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.util\";\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchCollectionSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTION_ERROR,\n  payload: errorMessage\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collection');\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/redux/shop/shop.action.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTION_START","fetchCollectionSuccess","collectionMap","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTION_ERROR","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,8BAA3D;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACvCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADiB,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,aAAa,KAAK;AACpDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,wBAD8B;AAEpDC,EAAAA,OAAO,EAAEF;AAF2C,CAAL,CAA5C;AAKP,OAAO,MAAMG,sBAAsB,GAAGC,YAAY,KAAI;AAClDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,sBAD4B;AAElDH,EAAAA,OAAO,EAAEE;AAFyC,CAAJ,CAA3C;AAKP,OAAO,MAAME,yBAAyB,GAAG,MAAM;AAC3C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AACAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMZ,aAAa,GAAGL,+BAA+B,CAACiB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACR,sBAAsB,CAACC,aAAD,CAAvB,CAAR;AAEH,KAJD,EAIGa,KAJH,CAISC,KAAK,IAAGP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAJzB;AAKH,GARD;AASH,CAVM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.util\";\r\n\r\nexport const fetchCollectionStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTION_START,\r\n})\r\n\r\nexport const fetchCollectionSuccess = collectionMap => ({\r\n    type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\r\n    payload: collectionMap\r\n})\r\n\r\nexport const fetchCollectionFailure = errorMessage =>({\r\n    type: ShopActionTypes.FETCH_COLLECTION_ERROR,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collection')\r\n        dispatch(fetchCollectionStart())\r\n        collectionRef.get().then(snapshot => {\r\n            const collectionMap = convertCollectionsSnapshotToMap(snapshot)\r\n            dispatch(fetchCollectionSuccess(collectionMap))\r\n\r\n        }).catch(error =>dispatch(fetchCollectionFailure(error.message)))\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}