{"ast":null,"code":"import React from \"react\";\nimport CollectionOverview from \"../../components/collectionOverview/collectionOverview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collectionPage.component\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.action\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from \"../../redux/shop/shop.selector\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n}\n\nconst MapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(MapStateToProps, mapDispatchToProps)(ShopPage); // render() {\n//     const { match, isCollectionFetching, isCollectionsLoaded } = this.props\n//     return (\n//         <div className=\"shop-page\">\n//             <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} />\n//             <Route\n//                 path={`${match.path}/:collectionId`}\n//                 render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />}\n//             />\n//         </div>\n//     )\n// }","map":{"version":3,"sources":["D:/react_Practice/crwnshop/src/pages/shop/shoppage.component.jsx"],"names":["React","CollectionOverview","Route","CollectionPage","connect","fetchCollectionsStartAsync","WithSpinner","createStructuredSelector","selectIsCollectionFetching","selectIsCollectionLoaded","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","MapStateToProps","isCollectionFetching","isCollectionsLoaded","mapDispatchToProps","dispatch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,kEAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,gCAArE;AACA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACL,kBAAD,CAAlD;AACA,MAAMU,yBAAyB,GAAGL,WAAW,CAACH,cAAD,CAA7C;;AAGA,MAAMS,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAET,MAAAA;AAAF,QAAiC,KAAKU,KAA5C;AAEAV,IAAAA,0BAA0B;AAC3B;;AALgC;;AASvC,MAAMW,eAAe,GAAGT,wBAAwB,CAAC;AAC7CU,EAAAA,oBAAoB,EAAGT,0BADsB;AAE7CU,EAAAA,mBAAmB,EAAET;AAFwB,CAAD,CAAhD;;AAKA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,0BAA0B,EAAE,MAAKe,QAAQ,CAACf,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAGA,eAAeD,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CP,QAA7C,CAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport CollectionOverview from \"../../components/collectionOverview/collectionOverview.component\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionPage from \"../collection/collectionPage.component\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.action\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from \"../../redux/shop/shop.selector\";\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview)\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n    \r\n        fetchCollectionsStartAsync();\r\n      }\r\n  \r\n}\r\n\r\nconst MapStateToProps = createStructuredSelector({\r\n    isCollectionFetching : selectIsCollectionFetching,\r\n    isCollectionsLoaded: selectIsCollectionLoaded\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () =>dispatch(fetchCollectionsStartAsync())\r\n})\r\nexport default connect(MapStateToProps, mapDispatchToProps)(ShopPage);\r\n\r\n\r\n\r\n// render() {\r\n//     const { match, isCollectionFetching, isCollectionsLoaded } = this.props\r\n//     return (\r\n//         <div className=\"shop-page\">\r\n//             <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} />\r\n//             <Route\r\n//                 path={`${match.path}/:collectionId`}\r\n//                 render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />}\r\n//             />\r\n//         </div>\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}